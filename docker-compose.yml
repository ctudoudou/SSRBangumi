version: '3.8'

services:
  # PostgreSQL 数据库服务
  postgres:
    image: postgres:15-alpine
    container_name: ssrbangumi-postgres
    restart: unless-stopped
    env_file:
      - .env.docker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ssrbangumi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Web 应用服务
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ssrbangumi-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env.docker
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ssrbangumi-network
    volumes:
      - ./uploads:/app/uploads

  # Aria2 下载服务
  aria2:
    image: p3terx/aria2-pro:latest
    container_name: ssrbangumi-aria2
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK_SET=022
      - RPC_SECRET=your_secret_token_here
      - RPC_PORT=6800
      - LISTEN_PORT=6888
      - DISK_CACHE=64M
      - IPV6_MODE=false
      - UPDATE_TRACKERS=true
      - CUSTOM_TRACKER_URL=
      - TZ=Asia/Shanghai
    ports:
      - "6800:6800"  # RPC 端口
      - "6888:6888"  # BT 监听端口
    volumes:
      - ./downloads:/downloads
      - aria2_config:/config
    networks:
      - ssrbangumi-network
    logging:
      driver: json-file
      options:
        max-size: "1m"

  # Aria2 Web UI (可选)
  ariang:
    image: p3terx/ariang:latest
    container_name: ssrbangumi-ariang
    restart: unless-stopped
    ports:
      - "6880:6880"
    networks:
      - ssrbangumi-network
    depends_on:
      - aria2

  # 可选：数据库管理工具 pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ssrbangumi-pgadmin
    restart: unless-stopped
    env_file:
      - .env.docker
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - ssrbangumi-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  aria2_config:
    driver: local

networks:
  ssrbangumi-network:
    driver: bridge